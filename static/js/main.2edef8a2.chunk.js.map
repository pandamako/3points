{"version":3,"sources":["logo.svg","components/input/index.js","components/calculator/index.js","App.js","index.js","registerServiceWorker.js"],"names":["module","exports","__webpack_require__","p","Input","react_default","a","createElement","Object","assign","type","this","props","className","cn","PureComponent","Calculator","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setOptimistic","e","target","valueAsNumber","setState","optimistic","setReal","real","setPessimistic","pessimistic","state","timeEstimate","standart_deviation","Math","round","htmlFor","components_input","id","onChange","result","Component","App","src","logo","alt","components_calculator","ReactDOM","render","src_App_0","document","getElementById","navigator","window","addEventListener","swUrl","concat","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"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","file":"static/js/main.2edef8a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { PureComponent } from 'react';\nimport cn from 'classnames'\nimport './index.css'\n\nclass Input extends PureComponent {\n  render() {\n    return (\n      <input type='number' {...this.props} className={cn(this.props.className, 'calc-input')}/>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport Input from '../input/'\nimport './index.css'\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  setOptimistic = (e) =>{\n    if(e.target.valueAsNumber) {\n      this.setState({optimistic: e.target.valueAsNumber})\n    }\n  }\n\n  setReal = (e) =>{\n    if(e.target.valueAsNumber) {\n      this.setState({real: e.target.valueAsNumber})\n    }\n  }\n\n  setPessimistic = (e) =>{\n    if(e.target.valueAsNumber) {\n      this.setState({pessimistic: e.target.valueAsNumber})\n    }\n  }\n\n  result() {\n    if(!this.state.optimistic || !this.state.real || !this.state.pessimistic) {\n      return '---'\n    }\n    let timeEstimate = (this.state.optimistic + 4 * this.state.real + this.state.pessimistic) / 6.0\n    let standart_deviation = (this.state.pessimistic - this.state.optimistic) / 6.0\n    return Math.round((timeEstimate + 2 * (standart_deviation * standart_deviation)) * 100) / 100\n  }\n\n  render() {\n    return (\n      <div {...this.props} className=\"calculator-container\">\n        <div className=\"calculator-cell\">\n          <label htmlFor=\"optimistic\">Optimistic</label>\n          <Input id=\"optimistic\" className=\"calculator-input\" onChange={this.setOptimistic}/>\n        </div>\n        <div className=\"calculator-cell\">\n          <label htmlFor=\"real\">Real</label>\n          <Input id=\"real\" className=\"calculator-input\" onChange={this.setReal}/>\n        </div>\n        <div className=\"calculator-cell\">\n          <label htmlFor=\"pessimistic\">Pessimistic</label>\n          <Input id=\"pessimistic\" className=\"calculator-input\" onChange={this.setPessimistic}/>\n        </div>\n        <div className=\"calculator-cell\">\n          <label htmlFor=\"result\">95% estimate</label>\n          <span id=\"result\" className=\"calculator-input result\">\n            {this.result()}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React, { Component } from 'react';\nimport Calculator from './components/calculator';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <div className=\"App-header-container\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2>Оценка по 3 точкам</h2>\n          </div>\n        </div>\n        <div className='container'>\n          <Calculator className=\"ff\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n// import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}