{"version":3,"sources":["logo.svg","components/input/index.js","components/calculator/index.js","App.js","index.js","registerServiceWorker.js"],"names":["module","exports","Input","PureComponent","render","type","this","props","className","cn","Calculator","Component","constructor","super","setOptimistic","e","target","valueAsNumber","setState","optimistic","setReal","real","setPessimistic","pessimistic","state","result","timeEstimate","standart_deviation","Math","round","htmlFor","id","onChange","App","src","logo","alt","ReactDOM","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,kC,2MCI3C,MAAMC,UAAcC,gBAClBC,SACE,OACE,yCAAOC,KAAK,UAAaC,KAAKC,MAA9B,CAAqCC,UAAWC,IAAGH,KAAKC,MAAMC,UAAW,kBAKhEN,Q,MCRf,MAAMQ,UAAmBC,YACvBC,YAAYL,GACVM,MAAMN,GADW,KAKnBO,cAAiBC,IACZA,EAAEC,OAAOC,eACVX,KAAKY,SAAS,CAACC,WAAYJ,EAAEC,OAAOC,iBAPrB,KAWnBG,QAAWL,IACNA,EAAEC,OAAOC,eACVX,KAAKY,SAAS,CAACG,KAAMN,EAAEC,OAAOC,iBAbf,KAiBnBK,eAAkBP,IACbA,EAAEC,OAAOC,eACVX,KAAKY,SAAS,CAACK,YAAaR,EAAEC,OAAOC,iBAjBvCX,KAAKkB,MAAQ,GAqBfC,SACE,IAAInB,KAAKkB,MAAML,aAAeb,KAAKkB,MAAMH,OAASf,KAAKkB,MAAMD,YAC3D,MAAO,MAET,IAAIG,GAAgBpB,KAAKkB,MAAML,WAAa,EAAIb,KAAKkB,MAAMH,KAAOf,KAAKkB,MAAMD,aAAe,EACxFI,GAAsBrB,KAAKkB,MAAMD,YAAcjB,KAAKkB,MAAML,YAAc,EAC5E,OAAOS,KAAKC,MAAuE,KAAhEH,EAAoBC,EAAqBA,EAA1B,IAAwD,IAG5FvB,SACE,OACE,yCAASE,KAAKC,MAAd,CAAqBC,UAAU,yBAC7B,yBAAKA,UAAU,mBACb,2BAAOsB,QAAQ,cAAf,cACA,kBAAC,EAAD,CAAOC,GAAG,aAAavB,UAAU,mBAAmBwB,SAAU1B,KAAKQ,iBAErE,yBAAKN,UAAU,mBACb,2BAAOsB,QAAQ,QAAf,QACA,kBAAC,EAAD,CAAOC,GAAG,OAAOvB,UAAU,mBAAmBwB,SAAU1B,KAAKc,WAE/D,yBAAKZ,UAAU,mBACb,2BAAOsB,QAAQ,eAAf,eACA,kBAAC,EAAD,CAAOC,GAAG,cAAcvB,UAAU,mBAAmBwB,SAAU1B,KAAKgB,kBAEtE,yBAAKd,UAAU,mBACb,2BAAOsB,QAAQ,UAAf,gBACA,0BAAMC,GAAG,SAASvB,UAAU,2BACzBF,KAAKmB,aAQHf,Q,sBC1Df,MAAMuB,UAAYtB,YAChBP,SACE,OACE,yBAAKI,UAAU,OACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,wBACb,yBAAK0B,IAAKC,IAAM3B,UAAU,WAAW4B,IAAI,SACzC,0HAGJ,yBAAK5B,UAAU,aACb,kBAAC,EAAD,CAAYA,UAAU,UAOjByB,Q,MCjBfI,IAASjC,OAAO,kBAAC,EAAD,MAASkC,SAASC,eAAe,SCKF,kBAAmBC,WAC9DC,OAAOC,iBAAiB,OAAQ,KAC9B,MAAMC,EAAK,UAAMC,WAAN,sBACXJ,UAAUK,cACPC,SAASH,GACTI,KAAKC,IACJA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,KACA,cAA3BF,EAAiB1B,QACfgB,UAAUK,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAMC,IACLH,QAAQG,MAAM,4CAA6CA,S","file":"static/js/main.b4a6886a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { PureComponent } from 'react';\nimport cn from 'classnames'\nimport './index.css'\n\nclass Input extends PureComponent {\n  render() {\n    return (\n      <input type='number' {...this.props} className={cn(this.props.className, 'calc-input')}/>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport Input from '../input/'\nimport './index.css'\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  setOptimistic = (e) =>{\n    if(e.target.valueAsNumber) {\n      this.setState({optimistic: e.target.valueAsNumber})\n    }\n  }\n\n  setReal = (e) =>{\n    if(e.target.valueAsNumber) {\n      this.setState({real: e.target.valueAsNumber})\n    }\n  }\n\n  setPessimistic = (e) =>{\n    if(e.target.valueAsNumber) {\n      this.setState({pessimistic: e.target.valueAsNumber})\n    }\n  }\n\n  result() {\n    if(!this.state.optimistic || !this.state.real || !this.state.pessimistic) {\n      return '---'\n    }\n    let timeEstimate = (this.state.optimistic + 4 * this.state.real + this.state.pessimistic) / 6.0\n    let standart_deviation = (this.state.pessimistic - this.state.optimistic) / 6.0\n    return Math.round((timeEstimate + 2 * (standart_deviation * standart_deviation)) * 100) / 100\n  }\n\n  render() {\n    return (\n      <div {...this.props} className=\"calculator-container\">\n        <div className=\"calculator-cell\">\n          <label htmlFor=\"optimistic\">Optimistic</label>\n          <Input id=\"optimistic\" className=\"calculator-input\" onChange={this.setOptimistic}/>\n        </div>\n        <div className=\"calculator-cell\">\n          <label htmlFor=\"real\">Real</label>\n          <Input id=\"real\" className=\"calculator-input\" onChange={this.setReal}/>\n        </div>\n        <div className=\"calculator-cell\">\n          <label htmlFor=\"pessimistic\">Pessimistic</label>\n          <Input id=\"pessimistic\" className=\"calculator-input\" onChange={this.setPessimistic}/>\n        </div>\n        <div className=\"calculator-cell\">\n          <label htmlFor=\"result\">95% estimate</label>\n          <span id=\"result\" className=\"calculator-input result\">\n            {this.result()}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React, { Component } from 'react';\nimport Calculator from './components/calculator';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <div className=\"App-header-container\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2>Оценка по 3 точкам</h2>\n          </div>\n        </div>\n        <div className='container'>\n          <Calculator className=\"ff\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}